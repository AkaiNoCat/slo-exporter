version: '3'

# To make this work, add to the root of this repository .env file with credentials such as:
# SZN_LOGY_USER=...
# SZN_LOGY_PASSWORD=...

services:
  tail:
    image: docker.dev.dszn.cz/generic/ci-scripts:latest
    environment:
      SZN_LOGY_USER: "${SZN_LOGY_USER}"
      SZN_LOGY_PASSWORD: "${SZN_LOGY_PASSWORD}"
    entrypoint: ["bash"]
    command:
      - "-c"
      - "cd /tmp/szn-logy/; /scripts/http_tail.sh"
    volumes:
      - ./scripts:/scripts
      - log-volume:/tmp/szn-logy

  slo-exporter:
    image: docker.dev.dszn.cz/generic/ci-scripts:latest
    ports:
      - 8080:8080
    depends_on:
      - tail
    entrypoint: ["/slo-exporter/slo_exporter"]
    command:
      - "--follow"
      - "--log-level=info"
      - "--slo-domain=userportal"
      - "--slo-rules-config=/slo-exporter/examples/slo_rules.yaml"
      - "--regexp-classification-file=/slo-exporter/examples/userportal.csv"
      - "--drop-with-status=301"
      - "--drop-with-status=404"
      - "--timescale-config=/slo-exporter/examples/timescale.yaml"
      - "--instance-name=slo_exporter-1"
      - "/tmp/szn-logy/access_log"
    volumes:
      - ./:/slo-exporter
      - log-volume:/tmp/szn-logy

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    environment:
      PROMETHEUS_CONFIG: |
        {
          "scrape_configs":[{
            "job_name": "slo-exporter",
            "scrape_interval": "2s",
            "static_configs":[
              {"targets":["slo-exporter:8080"]},
              ],
            }],
          "remote_read": [
                 {"url": "http://prometheus_postgresql_adapter:9201/read"}
            ]
        }
    entrypoint: ["sh"]
#    volumes:
#      - ./prometheus/data:/prometheus/data
    command:
      - "-c"
      - 'echo $$PROMETHEUS_CONFIG > /etc/prometheus/prometheus.yml; prometheus --config.file=/etc/prometheus/prometheus.yml'

  postgresql:
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    image: timescale/pg_prometheus:latest-pg11
    command:
      - "-csynchronous_commit=off"
      - "-ccommit_delay=2000"
      - "-clog_checkpoints=on"
    ports:
      - 5432:5432/tcp
    volumes:
      - ./:/slo-exporter
#      - ./postgresql/data:/var/lib/postgresql/data

  prometheus_postgresql_adapter:
    image: timescale/prometheus-postgresql-adapter:latest
    depends_on:
    - postgresql
    - prometheus
    entrypoint:
      - "sh"
    command:
      - "-c"
      - "sleep 30; /prometheus-postgresql-adapter"
    environment:
      TS_PROM_LOG_LEVEL: info
      TS_PROM_PG_DB_CONNECT_RETRIES: 1000000
      TS_PROM_PG_HOST: postgresql
      TS_PROM_PG_PASSWORD: postgres
      TS_PROM_PG_SCHEMA: postgres
      TS_PROM_WEB_TELEMETRY_PATH: /metrics-text
    ports:
    - 9201:9201/tcp


volumes:
  log-volume:
